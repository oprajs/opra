import chalk from 'chalk';
import { program } from 'commander';
import * as console from 'console';
import * as fs from 'fs';
import path from 'path';
import * as process from 'process';
import { generateService } from './oprimp/generate-service.js';
import { getCallerFile } from './utils/get-caller-file.util.js';

const pkgJson = JSON.parse(fs.readFileSync(path.resolve(path.dirname(getCallerFile()), '../package.json'), 'utf-8'));

program
    .version(pkgJson.version)
    .argument('<serviceUrl>', 'OPRA service url')
    .argument('<outDir>', 'Output directory')
    .option('--name <name>', 'Name of the service')
    .option('--ext', 'Adds js extension to imports')
    .option('--no-color', 'Disables colors in logs messages')
    .action(async (serviceUrl, outDir, options) => {
      if (!options.color)
        chalk.level = 0;
      await generateService({
        serviceUrl,
        outDir,
        name: options.name,
        extension: (options.ext ? '.js' : ''),
        fileHeader:
            '/* eslint-disable import/extensions,simple-import-sort/imports */\n' +
            '/*\n' +
            ' * Generated by OPRA Service Generator \n' +
            ' * Version: ' + pkgJson.version + '\n' +
            ' * ' + new Date() + '\n' +
            ' */'
      });
      console.log(chalk.greenBright('Completed'));
    });

program.parse(process.argv);
