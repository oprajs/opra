import chalk from 'chalk';
import { program } from 'commander';
import * as console from 'console';
import * as fs from 'fs';
import path from 'path';
import * as process from 'process';
import { getStackFileName } from '@opra/common';
import { TsGenerator } from './ts-generator/ts-generator.js';

const dirname = path.dirname(getStackFileName());
const pkgJson = JSON.parse(fs.readFileSync(path.resolve(dirname, '../package.json'), 'utf-8'));

program
  .version(pkgJson.version)
  .argument('<serviceUrl>', 'OPRA service url')
  .argument('<outDir>', 'Output directory')
  .option('--ext', 'Adds js extension to imports')
  .option('--no-color', 'Disables colors in logs messages')
  .action(async (serviceUrl, outDir, options) => {
    if (!options.color) chalk.level = 0;
    const generator = new TsGenerator({
      serviceUrl,
      logger: console,
      outDir,
      importExt: options.ext,
      fileHeader: `/* Generated by OPRA Code Generator, Version ${pkgJson.version} */`,
    });
    await generator
      .generate()
      .then(() => console.log(chalk.greenBright('Completed')))
      .catch(e => console.error(e.message));
  });

if (process.argv.length < 3) program.help();
else program.parse(process.argv);
