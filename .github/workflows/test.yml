name: Unit Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Node v${{ matrix.node }}
    strategy:
      fail-fast: false
      matrix:
        node: [ '20' ]

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:4.0
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672

    steps:
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.11.0
        with:
          mongodb-version: 8.0
          mongodb-replica-set: test-rs

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.2.0
          security-enabled: false

      - name: Run Kafka KRaft Broker
        uses: spicyparrot/kafka-kraft-action@v1.1.0
        with:
          kafka-version: "3.7.0"
          kafka-topics: "feed-cat,1,feed-dog,1,email-channel-1,1,email-channel-2,1,sms-channel-1,1,sms-channel-2,1"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node_modules-${{ runner.os }}-            

      - name: Install NodeJS dependencies
        run: npm install

      - name: Install rman
        run: npm install rman -g

      - name: Run linter tests
        run: rman run lint

      - name: Run circular dependency tests
        run: rman run check

      - name: Run compile tests
        run: rman run compile

      - name: Run unit tests
        run: npm run citest
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          KAFKA_BROKER: localhost:9092
          ELASTIC_HOST: http://localhost:9200

      - name: Send coverage to Coveralls
        uses: coverallsapp/github-action@v2
        # Run only once
        if: ${{ matrix.node == '20' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
