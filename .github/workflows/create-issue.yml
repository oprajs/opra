name: Jira to GitHub Issue Integration

on:
  issues:
    types: [opened]

jobs:
  jira_to_github_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Python
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install requests

      - name: Display Issue Information
        run: |
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Body: ${{ github.event.issue.body }}"
          echo "Issue Name: ${{ github.event_name }}"
          
      - name: Process Jira Webhook
        id: parse_jira_webhook
        env:
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_API_URL: ${{ secrets.JIRA_API_URL }}
          JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
        run: |
          # Jira webhook verisini al
          # Jira'dan gelen webhook verisi ${{ github.event }} ile alınabilir.
          # Jira'nın webhook isteğinin JSON formatında olduğunu varsayarsak:

          # Webhook verisini doğru değişkenlere atanır.
          # Bu örnekte issue başlığı, açıklaması ve kimden geldiği alınmıştır.
          # Jira'dan gelen JSON verisine göre değişkenleri belirleyebilirsiniz.
          # Örneğin: ${{ github.event.issue.fields.summary }} ve ${{ github.event.issue.fields.description }}
          issue_title="${{ github.event.issue.fields.summary }}"

          # Python scripti ile Jira REST API'sini çağırarak issue'ı oluşturun.
          python3 - <<EOF
          import requests
          import os

          # Jira REST API adresi ve kimlik doğrulama bilgileri
          #jira_api_url = ${{ secrets.JIRA_API_URL }}
          #jira_username = ${{ secrets.JIRA_USERNAME }}
          #jira_api_token = ${{ secrets.JIRA_API_TOKEN }}

          # Fetch secret values from environment variables
          jira_api_url = os.environ.get('JIRA_API_URL')
          jira_username = os.environ.get('JIRA_USERNAME')
          jira_api_token = os.environ.get('JIRA_API_TOKEN')
          print('url', jira_api_url)
          print('user_name',jira_username)
          print('token', jira_api_token)
          # Jira'ya yeni bir issue oluşturmak için gerekli JSON verisi
          issue_data = {
              "fields": {
                  "project": {"key": "OP"},
                  "summary": "${{ github.event.issue.title }}",
                  "issuetype": {"name": "Story"},
              }
          }

          # Jira REST API'sine isteği yapın
          headers = {"Content-Type": "application/json"}
          auth = (jira_username, jira_api_token)
          response = requests.post(jira_api_url, json=issue_data, headers=headers, auth=auth)

          print(response.status_code)
          print(response.json())
          EOF

      - name: Display Issue Info
        run: |
          # Issue bilgilerini al
          title="${{ steps.parse_jira_webhook.outputs.title }}"
          author="${{ steps.parse_jira_webhook.outputs.author }}"

          # Issue bilgilerini görüntüle
          echo "Issue Başlık: $title"
